/*
 * This file is generated by jOOQ.
 */
package by.zbokostya.generated.jooq.tables.records;


import by.zbokostya.generated.jooq.tables.Apikey;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApikeyRecord extends UpdatableRecordImpl<ApikeyRecord> implements Record4<UUID, String, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.apikey.project</code>.
     */
    public void setProject(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.apikey.project</code>.
     */
    public UUID getProject() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.apikey.apikey</code>.
     */
    public void setApikey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.apikey.apikey</code>.
     */
    public String getApikey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.apikey.role</code>.
     */
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.apikey.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.apikey.id</code>.
     */
    public void setId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.apikey.id</code>.
     */
    public UUID getId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Apikey.APIKEY.PROJECT;
    }

    @Override
    public Field<String> field2() {
        return Apikey.APIKEY.APIKEY_;
    }

    @Override
    public Field<String> field3() {
        return Apikey.APIKEY.ROLE;
    }

    @Override
    public Field<UUID> field4() {
        return Apikey.APIKEY.ID;
    }

    @Override
    public UUID component1() {
        return getProject();
    }

    @Override
    public String component2() {
        return getApikey();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public UUID component4() {
        return getId();
    }

    @Override
    public UUID value1() {
        return getProject();
    }

    @Override
    public String value2() {
        return getApikey();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public UUID value4() {
        return getId();
    }

    @Override
    public ApikeyRecord value1(UUID value) {
        setProject(value);
        return this;
    }

    @Override
    public ApikeyRecord value2(String value) {
        setApikey(value);
        return this;
    }

    @Override
    public ApikeyRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public ApikeyRecord value4(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ApikeyRecord values(UUID value1, String value2, String value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApikeyRecord
     */
    public ApikeyRecord() {
        super(Apikey.APIKEY);
    }

    /**
     * Create a detached, initialised ApikeyRecord
     */
    public ApikeyRecord(UUID project, String apikey, String role, UUID id) {
        super(Apikey.APIKEY);

        setProject(project);
        setApikey(apikey);
        setRole(role);
        setId(id);
    }

    /**
     * Create a detached, initialised ApikeyRecord
     */
    public ApikeyRecord(by.zbokostya.generated.jooq.tables.pojos.Apikey value) {
        super(Apikey.APIKEY);

        if (value != null) {
            setProject(value.getProject());
            setApikey(value.getApikey());
            setRole(value.getRole());
            setId(value.getId());
        }
    }
}
